{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","onAddNewContact","exsisted","useState","name","setName","number","setNumber","nameInputId","shortid","generate","phoneNumberId","handleContactInputChange","event","target","value","reset","className","s","phonebookTitle","form","onSubmit","preventDefault","alert","htmlFor","label","labelDescription","type","id","input","onChange","addContactBtn","ContactsList","contacts","onDeleteContact","length","contactsList","map","ContactsListItem","contact","deleteBtn","onClick","defaultProps","protoTypes","PropTypes","array","isRequired","func","Filter","changeFilter","filterInputId","contactsSection","contactsTitle","findDescription","App","storedContacts","window","localStorage","getItem","JSON","parse","setContacts","filter","setFilter","useEffect","setItem","stringify","showContacts","toLocaleLowerCase","includes","uuidv4","state","find","e","currentTarget","ContactList","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e357cf8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebookTitle\":\"ContactForm_phonebookTitle__1UZIM\",\"form\":\"ContactForm_form__tPpYu\",\"label\":\"ContactForm_label__8XG-E\",\"labelDescription\":\"ContactForm_labelDescription__3TOHS\",\"input\":\"ContactForm_input__k_6nl\",\"addContactBtn\":\"ContactForm_addContactBtn__2GBDe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__2i3nr\",\"ContactsListItem\":\"ContactList_ContactsListItem__1QgPX\",\"contact\":\"ContactList_contact__35VuO\",\"name\":\"ContactList_name__3oAhI\",\"number\":\"ContactList_number__1WNrs\",\"deleteBtn\":\"ContactList_deleteBtn__1WPMQ\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport s from './ContactForm.module.css';\n\nconst ContactForm = ({ onAddNewContact, exsisted }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = shortid.generate();\n  const phoneNumberId = shortid.generate();\n\n  const handleContactInputChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleContactSubmit = event => {\n    event.preventDefault();\n\n    if (exsisted(name)) {\n      alert(`${name} is alredy in contacts.`);\n      reset();\n      return;\n    }\n\n    onAddNewContact(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <h1 className={s.phonebookTitle}>Phonebook</h1>\n      <form className={s.form} onSubmit={handleContactSubmit}>\n        <label htmlFor={nameInputId} className={s.label}>\n          <span className={s.labelDescription}>Name</span>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            id={nameInputId}\n            className={s.input}\n            onChange={handleContactInputChange}\n          />\n        </label>\n\n        <label htmlFor={phoneNumberId} className={s.label}>\n          <span className={s.labelDescription}>Number</span>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            id={phoneNumberId}\n            className={s.input}\n            onChange={handleContactInputChange}\n          />\n        </label>\n\n        <button type=\"submit\" className={s.addContactBtn}>\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n};\n\nContactForm.propTypes = {\n  onAddNewContact: PropTypes.func,\n  exsisted: PropTypes.func,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactsList = ({ contacts, onDeleteContact }) => {\n  return (\n    contacts.length > 0 && (\n      <ul className={s.contactsList}>\n        {contacts.map(({ id, name, number }) => (\n          <li key={id} className={s.ContactsListItem}>\n            <p className={s.contact}>\n              <span className={s.name}>{name}:</span>\n              <span className={s.number}>{number}</span>\n            </p>\n            <button className={s.deleteBtn} onClick={() => onDeleteContact(id)}>\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    )\n  );\n};\n\nContactsList.defaultProps = {\n  contacts: [],\n};\n\nContactsList.protoTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactsList;\n","import s from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\n\r\nconst Filter = ({ value, changeFilter }) => {\r\n  const filterInputId = shortid.generate();\r\n\r\n  return (\r\n    <section className={s.contactsSection}>\r\n      <h2 className={s.contactsTitle}>Contacts</h2>\r\n      <label htmlFor={filterInputId} className={s.label}>\r\n        <span className={s.findDescription}>Find contact by name:</span>\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={value}\r\n          id={filterInputId}\r\n          className={s.input}\r\n          onChange={changeFilter}\r\n        />\r\n      </label>\r\n    </section>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  changeFilter: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nconst App = () => {\n  const [contacts, setContacts] = useState(() => {\n    const storedContacts = window.localStorage.getItem('contacts');\n    return JSON.parse(storedContacts) ?? [];\n  });\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addNewContact = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    setContacts(state => [...state, contact]);\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getExistedContact = name => {\n    return contacts.find(contact => contact.name === name);\n  };\n\n  const getFilteredContacts = () =>\n    contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()),\n    );\n\n  const showContacts = getFilteredContacts();\n\n  return (\n    <>\n      <ContactForm\n        onAddNewContact={addNewContact}\n        exsisted={getExistedContact}\n      />\n      <Filter value={filter} changeFilter={changeFilter} />\n      <ContactList contacts={showContacts} onDeleteContact={deleteContact} />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsSection\":\"Filter_contactsSection__2MRAY\",\"contactsTitle\":\"Filter_contactsTitle__3h_G5\",\"label\":\"Filter_label__2Mf9Q\",\"findDescription\":\"Filter_findDescription__9Dht0\",\"input\":\"Filter_input__66nOJ\"};"],"sourceRoot":""}